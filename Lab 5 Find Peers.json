{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_4",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_6",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_2",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_7",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_7_to_port_8",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_2_to_port_10",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_8_to_port_11",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_10_to_port_12",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_11_to_port_13",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_12_to_port_14",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_13_to_port_15",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_14_to_port_16",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_15_to_port_17",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_16_to_port_18",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_17_to_port_19",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                }
            ],
            "hash": "606a3a5f6b6473434fd054660a1bd74e7bd17f10",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 1000,
                    "y": 419.9999999999999
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1000,
                    "y": 1420
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Comment Address",
                            "customNameId": 0,
                            "description": "",
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "comment_address",
                        "id": "10",
                        "parameters": [
                            "search_by_address:action_result.summary.total_events"
                        ],
                        "template": "Found {0} peers via address search.\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "format",
                    "x": 820,
                    "y": 920
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "Comment Hostname",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "comment_hostname",
                        "id": "11",
                        "parameters": [
                            ""
                        ],
                        "template": "Found {0} peers via hostname search.\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "format",
                    "x": 1140,
                    "y": 920
                },
                "12": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "add_comment_2",
                        "id": "12",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "comment_address:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "12",
                    "type": "utility",
                    "x": 820,
                    "y": 1020
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "add_comment_3",
                        "id": "13",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "comment_hostname:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "13",
                    "type": "utility",
                    "x": 1140,
                    "y": 1020
                },
                "14": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": 144,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_event_1",
                        "id": "14",
                        "parameters": {
                            "comment": "SOAR processing",
                            "event_ids": "artifact:*.cef.event_id",
                            "status": "in progress"
                        },
                        "requiredParameters": [
                            "event_ids"
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "action",
                    "x": 820,
                    "y": 1120
                },
                "15": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": 144,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "update_event_2",
                        "id": "15",
                        "parameters": {
                            "comment": "SOAR Processing",
                            "event_ids": "artifact:*.cef.event_id",
                            "status": "in progress"
                        },
                        "requiredParameters": [
                            "event_ids"
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "x": 1140,
                    "y": 1120
                },
                "16": {
                    "data": {
                        "advanced": {
                            "customName": "Store List by Address",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_peers",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "store_list_by_address",
                        "id": "16",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_peers": {
                                "description": "Store a list of peer servers with their priority",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "the action result data dictionary from a Splunk query",
                                        "inputType": "list",
                                        "label": "queryResultData",
                                        "name": "queryResultData",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Container ID",
                                        "inputType": "list",
                                        "label": "containerID",
                                        "name": "containerID",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_peers",
                                "name": "list_peers"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_peers": {
                                "containerID": "container:id",
                                "queryResultData": "search_by_address:action_result.data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "16",
                    "type": "utility",
                    "x": 820,
                    "y": 1220
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_peers",
                            "repoName": "local"
                        },
                        "functionId": 4,
                        "functionName": "list_peers_4",
                        "id": "17",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_peers": {
                                "description": "Store a list of peer servers with their priority",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "the action result data dictionary from a Splunk query",
                                        "inputType": "list",
                                        "label": "queryResultData",
                                        "name": "queryResultData",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "Container ID",
                                        "inputType": "list",
                                        "label": "containerID",
                                        "name": "containerID",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_peers",
                                "name": "list_peers"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_peers": {
                                "containerID": "container:id",
                                "queryResultData": "search_by_hostname:action_result.data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "17",
                    "type": "utility",
                    "x": 1140,
                    "y": 1220
                },
                "18": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Triage_Peers_1",
                        "id": "18",
                        "inputs": {
                            "List Name": {
                                "datapaths": [
                                    "store_list_by_address:custom_function_result.data.listName"
                                ],
                                "deduplicate": false
                            }
                        },
                        "playbookName": "Triage Peers",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "data",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "playbook",
                    "x": 820,
                    "y": 1320
                },
                "19": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "playbook_Triage_Peers_2",
                        "id": "19",
                        "inputs": {
                            "List Name": {
                                "datapaths": [
                                    "list_peers_4:custom_function_result.data.listName"
                                ],
                                "deduplicate": false
                            }
                        },
                        "playbookName": "Triage Peers",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "data",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "playbook",
                    "x": 1140,
                    "y": 1320
                },
                "2": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Search by Address",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": 144,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "search_by_address",
                        "id": "2",
                        "parameters": {
                            "command": "",
                            "query": "address_query:formatted_data"
                        },
                        "requiredParameters": [
                            "query"
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "action",
                    "x": 820,
                    "y": 820
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.destinationAddress",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Using Address",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "op": "!=",
                                        "param": "artifact:*.cef.destinationHostName",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Using Hostname",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "4",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "filter",
                    "x": 1040,
                    "y": 544.5
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "Address Query",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "address_query",
                        "id": "6",
                        "parameters": [
                            "filtered-data:filter_1:condition_1:artifact:*.cef.destinationAddress"
                        ],
                        "template": "|savedsearch find_peers host=\"{0}\"",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "format",
                    "x": 820,
                    "y": 720
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "Hostname Query",
                            "customNameId": 0,
                            "description": "",
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "hostname_query",
                        "id": "7",
                        "parameters": [
                            "filtered-data:filter_1:condition_2:artifact:*.cef.destinationHostName"
                        ],
                        "template": "|savedsearch find_peers host=\"{0}\"\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "format",
                    "x": 1140,
                    "y": 720
                },
                "8": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Search by Hostname",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": 144,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "search_by_hostname",
                        "id": "8",
                        "parameters": {
                            "query": "hostname_query:formatted_data"
                        },
                        "requiredParameters": [
                            "query"
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "action",
                    "x": 1140,
                    "y": 820
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.3",
        "version": "5.0.1.66250"
    },
    "create_time": "2022-04-28T16:18:14.761141+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}